<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.1.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.1.xsd "
	xmlns:tx="http://www.springframework.org/schema/tx" 
	>
	<!-- 定义易受环境影响的变量 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:jdbc.properties" />
	</bean>
	
	<!-- 数据源配置,使用应用中的Basic数据库连接池 -->
	<bean id="dataSource"  class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<!-- 数据库连接信息 -->
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 数据库连接池 -->
		<!-- 连接池启动时的初始值 -->
		<property name="initialSize" value="${jdbc.initialSize}"/>
		 <!--  最小空闲值.当空闲的连接数少于该值时，连接池就会预申请一些连接，以避免洪峰来时再申请而造成的性能开销 -->
		<property name="minIdle" value="${jdbc.minIdle}"/>
		 <!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->
	    <property name="maxIdle" value="${jdbc.maxIdle}" />
	    <!-- 连接池的最大值 -->
	    <property name="maxActive" value="${jdbc.maxActive}" />
	    <!-- 最大等待时间 -->
	    <property name="maxWait" value="${jdbc.maxWait}" />
	    <property name="validationQuery" value="select CURRENT_DATE" />
	</bean>
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.junesoon.search.entity.*"/>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop>
			</props>
		</property>
		<property name="mappingResources">
			<list>
				<value>
					com/junesoon/search/entity/TabUserinfoBase.hbm.xml
				</value>
				<value>
					com/junesoon/search/entity/TabNewuserMail.hbm.xml
				</value>
				<value>
					com/junesoon/search/entity/TabNewpassMail.hbm.xml
				</value></list>
		</property></bean>
	<!-- 事务管理器配置,单数据源事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	 
	 
	<bean id="TabUserinfoBaseDAO"
		class="com.junesoon.search.entity.TabUserinfoBaseDAO">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<bean id="TabNewuserMailDAO"
		class="com.junesoon.search.entity.TabNewuserMailDAO">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<bean id="TabNewpassMailDAO"
		class="com.junesoon.search.entity.TabNewpassMailDAO">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean></beans>
    